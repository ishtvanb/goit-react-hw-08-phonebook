{"version":3,"file":"static/js/776.01fa0324.chunk.js","mappings":"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","sources":["components/Wrapper/Wrapper.jsx","components/Wrapper/Wrapper.styled.jsx","redux/contacts/selectors.jsx","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","components/Loader.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { Div } from './Wrapper.styled';\nimport PropTypes from 'prop-types';\nconst Wrapper = ({ children }) => <Div> {children}</Div>;\n\nWrapper.propTypes = {\n  children: PropTypes.any.isRequired,\n};\n\nexport default Wrapper;","import styled from \"@emotion/styled\";\n\nexport const Div = styled.div`\n  width: 300px;\n  margin: 0 auto;\n  padding-right: 15px;\n  padding-left: 15px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\n\nexport const PrimaryTitle = styled.h1`\n  margin-bottom: 20px;\n  text-align: center;\n  color: darkblue;\n`;\n\nexport const SecondaryTitle = styled.h2`\n  margin-bottom: 20px;\n  text-align: center;\n  color: darkblue;\n`;\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.value;\n\nexport const selectVisibleContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n\n  return contacts?.filter(contact =>\n    contact?.name?.toLowerCase().includes(filter.toLowerCase())\n  );\n};","import { Formik, Field } from 'formik';\nimport toast, { Toaster } from 'react-hot-toast';\nimport * as Yup from 'yup';\nimport 'yup-phone-lite';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { TextField, Button } from '@mui/material';\n\nconst ContactSchema = Yup.object({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Name is required!'),\n  phone: Yup.string().phone('UA').required('Phone number is required!'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <>\n      <Toaster />\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n\n      validationSchema={ContactSchema}\n        onSubmit={({ ...values }, actions) => {\n          const existingContact = contacts.find(\n            contact => contact.name.toLowerCase() === values.name.toLowerCase()\n          );\n          if (existingContact) {\n            toast.error(\n              `You already have ${existingContact.name} in your contacts!`\n            );\n            actions.resetForm();\n          } else {\n            dispatch(addContact({ ...values }));\n            actions.resetForm();\n          }\n        }}\n      >\n      {({ handleSubmit }) => (\n          <form onSubmit={handleSubmit}>\n            <Field name=\"name\">\n              {({ field, form: { touched, errors } }) => (\n                <TextField\n                  {...field}\n                  label=\"Name\"\n                  variant=\"outlined\"\n                  error={touched.name && Boolean(errors.name)}\n                  helperText={touched.name && errors.name}\n                  fullWidth\n                  margin=\"normal\"\n                  autoComplete=\"off\"\n                  size=\"small\"\n                />\n              )}\n            </Field>\n\n            <Field name=\"number\">\n              {({ field, form: { touched, errors } }) => (\n                <TextField\n                  {...field}\n                  label=\"Number\"\n                  variant=\"outlined\"\n                  error={touched.number && Boolean(errors.number)}\n                  helperText={touched.number && errors.number}\n                  fullWidth\n                  margin=\"normal\"\n                  autoComplete=\"off\"\n                  size=\"small\"\n                  sx={{ mb: 2 }}\n                />\n              )}\n            </Field>\n\n             <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              sx={{ mb: 4 }}\n              fullWidth\n            >\n              Add contact\n            </Button>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import styled from \"@emotion/styled\";\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,\n    rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\n  border-radius: 10px;\n  padding: 10px;\n  background-color: lightblue;\n  \n  &:not(:last-of-type) {\n    margin-bottom: 10px;\n  }\n\n&:hover {\n  background-color: darkgrey;\n  }\n`;","import { BsTrash } from 'react-icons/bs';\nimport { ContactItem } from './ContactsList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { number } from 'prop-types';\n\nconst ContactsList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  const handleDelete = id => dispatch(deleteContact(id));\n\n  return (\n    <ul>\n      {contacts?.map(({ name, phone, id }) => {\n        return (\n          <ContactItem key={id}>\n            <span\n              style={{\n                flexGrow: '2',\n              }}\n            >\n              {name}\n            </span>\n          <span\n              style={{\n                marginRight: '10px',\n              }}\n            >\n              {number}\n            </span>\n\n            <BsTrash\n              aria-label=\"delete-icon\"\n              style={{\n                cursor: 'pointer',\n                color: 'crimson',\n              }}\n              onClick={() => {\n                handleDelete(id);\n              }}\n            />\n          </ContactItem>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactsList;","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { updateFilter } from 'redux/contacts/filterSlice';\nimport { TextField } from '@mui/material';\n\nconst Filter = () => {\n  const value = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <TextField\n        label=\"Find contacts by name\"\n        variant=\"outlined\"\n        onChange={e => dispatch(updateFilter(e.target.value))}\n        id=\"Find contacts by name\"\n        value={value}\n        size=\"small\"\n        sx={{\n          mb: 2,\n          ml: 10\n        }}\n        InputLabelProps={{ shrink: true }}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import { ColorRing } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <ColorRing\n  visible={true}\n  height=\"80\"\n  width=\"80\"\n  ariaLabel=\"blocks-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"blocks-wrapper\"\n  colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n/>\n  );\n};\n\nexport default Loader;","import Wrapper from 'components/Wrapper/Wrapper';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport Filter from 'components/Filter/Filter';\nimport Loader from 'components/Loader';\nimport { PrimaryTitle, SecondaryTitle } from 'components/Wrapper/Wrapper.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nexport const ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n    \n  return (\n    <Wrapper>\n      <PrimaryTitle>Phonebook</PrimaryTitle>\n      <ContactForm />\n      <SecondaryTitle>Contacts</SecondaryTitle>\n      <Filter />\n      {isLoading && !error && <Loader />}\n      <ContactsList />\n    </Wrapper>\n  );\n};\n\nexport default ContactsPage;"],"names":["children","Div","styled","PrimaryTitle","SecondaryTitle","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","value","selectVisibleContacts","contact","name","toLowerCase","includes","ContactSchema","Yup","min","max","required","phone","dispatch","useDispatch","useSelector","initialValues","number","validationSchema","onSubmit","actions","values","existingContact","find","toast","resetForm","addContact","handleSubmit","field","form","touched","errors","TextField","label","variant","Boolean","helperText","fullWidth","margin","autoComplete","size","sx","mb","Button","type","color","ContactItem","map","id","style","flexGrow","marginRight","cursor","onClick","deleteContact","handleDelete","onChange","e","updateFilter","target","ml","InputLabelProps","shrink","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","ContactsPage","useEffect","fetchContacts","Wrapper"],"sourceRoot":""}